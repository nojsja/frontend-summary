import{c as n}from"./app.64d713d8.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h4 id="the-template-pattern-\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#the-template-pattern-\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F" aria-hidden="true">#</a> The Template Pattern(\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F)</h4><blockquote><p>\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F -- \u4E00\u79CD\u57FA\u4E8E\u7EE7\u627F\u7684\u8BBE\u8BA1\u6A21\u5F0F\uFF0C\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F\u7531\u4E24\u90E8\u5206\u7EC4\u6210\uFF0C\u7B2C\u4E00\u90E8\u5206\u65F6\u62BD\u8C61\u7236\u7C7B\uFF0C\u7B2C\u4E8C\u90E8\u5206\u65F6\u5177\u4F53\u7684\u5B9E\u73B0\u5B50\u7C7B\uFF0C\u901A\u5E38\u5728\u62BD\u8C61\u7236\u7C7B\u4E2D\u5C01\u88C5\u4E86\u5B50\u7C7B\u7684\u7B97\u6CD5\u6846\u67B6\uFF0C\u5305\u62EC\u5B9E\u73B0\u4E00\u4E9B\u516C\u5171\u65B9\u6CD5\u4EE5\u53CA\u51E4\u722A\u56FD\u5185\u5B50\u7C7B\u4E2Di\u6240\u6709\u65B9\u6CD5\u7684\u6267\u884C\u987A\u5E8F\uFF0C\u5B50\u7C7B\u901A\u8FC7\u7EE7\u627F\u8FD9\u4E2A\u62BD\u8C61\u7C7B\uFF0C\u4E5F\u7EE7\u627F\u4E86\u6574\u4E2A\u7B97\u6CD5\u7ED3\u6784\uFF0C\u5E76\u4E14\u53EF\u4EE5\u9009\u62E9\u91CD\u5199\u7236\u7C7B\u7684\u65B9\u6CD5\u3002</p></blockquote><ol><li>\u5728\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F\u4E2D\uFF0C\u5B50\u7C7B\u5B9E\u73B0\u4E2D\u76F8\u540C\u90E8\u5206\u88AB\u4E0A\u79FB\u5230\u7236\u7C7B\u4E2D\uFF0C\u800C\u5C06\u4E0D\u540C\u7684\u90E8\u5206\u7B49\u5F85\u5B50\u7C7B\u6765\u5B9E\u73B0\uFF0C\u4F53\u73B0\u4E86\u6CDB\u5316\u7684\u601D\u60F3\u3002</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ------- \u7236\u7C7B\u51B2\u6CE1\u996E\u6599 -------- //</span>
<span class="token keyword">var</span> <span class="token function-variable function">Beverage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>shouldAddCondiments <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Beverage</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">boilWater</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;boil the water&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Beverage</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">brew</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;should overwrite brew func!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Beverage</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">pourInCup</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;should overwrite pourInCup func!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Beverage</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addCondiments</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;should overwrite addCondiments func!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Beverage</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">hook</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">shouldAddCondiments</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>shouldAddCondiments <span class="token operator">=</span> shouldAddCondiments<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Beverage</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">boilWater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">brew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">pourInCup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>shouldAddCondiments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addCondiments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// ------- \u5B50\u7C7B\u6CE1\u5496\u5561\u548C\u6CE1\u8336 -------- //</span>
<span class="token keyword">var</span> <span class="token function-variable function">Tea</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Tea</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Beverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Tea<span class="token punctuation">.</span><span class="token function-variable function">brew</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;brew for tea&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Tea<span class="token punctuation">.</span><span class="token function-variable function">pourInCup</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;pourInCup for tea&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Tea<span class="token punctuation">.</span><span class="token function-variable function">addCondiments</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;addCondiments for tea&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> tea <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
tea<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">var</span> <span class="token function-variable function">Coffe</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Coffe</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Beverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Coffe<span class="token punctuation">.</span><span class="token function-variable function">brew</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;brew for coffe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Coffe<span class="token punctuation">.</span><span class="token function-variable function">pourInCup</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;pourInCup for coffe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Coffe<span class="token punctuation">.</span><span class="token function-variable function">addCondiments</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;addCondiments for coffe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> coffe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Coffe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
coffe<span class="token punctuation">.</span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
coffe<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div>`,4);function t(o,e){return p}var l=s(a,[["render",t]]);export{l as default};
